── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.1     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift

Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
+ Fold01: intercept=TRUE 
- Fold01: intercept=TRUE 
+ Fold02: intercept=TRUE 
- Fold02: intercept=TRUE 
+ Fold03: intercept=TRUE 
- Fold03: intercept=TRUE 
+ Fold04: intercept=TRUE 
- Fold04: intercept=TRUE 
+ Fold05: intercept=TRUE 
- Fold05: intercept=TRUE 
+ Fold06: intercept=TRUE 
- Fold06: intercept=TRUE 
+ Fold07: intercept=TRUE 
- Fold07: intercept=TRUE 
+ Fold08: intercept=TRUE 
- Fold08: intercept=TRUE 
+ Fold09: intercept=TRUE 
- Fold09: intercept=TRUE 
+ Fold10: intercept=TRUE 
- Fold10: intercept=TRUE 
Aggregating results
Fitting final model on full training set
Warning messages:
1: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
2: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
3: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
4: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
5: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
6: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
7: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
8: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
9: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
10: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
6.809 sec elapsed
Linear Regression 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 385, 386, 385, 385, 384, 386, ... 
Resampling results:

  RMSE      Rsquared   MAE     
  101.8773  0.1758324  27.64144

Tuning parameter 'intercept' was held constant at a value of TRUE
+ Fold01: alpha=0.10, lambda=8.075 
- Fold01: alpha=0.10, lambda=8.075 
+ Fold01: alpha=0.55, lambda=8.075 
- Fold01: alpha=0.55, lambda=8.075 
+ Fold01: alpha=1.00, lambda=8.075 
- Fold01: alpha=1.00, lambda=8.075 
+ Fold02: alpha=0.10, lambda=8.075 
- Fold02: alpha=0.10, lambda=8.075 
+ Fold02: alpha=0.55, lambda=8.075 
- Fold02: alpha=0.55, lambda=8.075 
+ Fold02: alpha=1.00, lambda=8.075 
- Fold02: alpha=1.00, lambda=8.075 
+ Fold03: alpha=0.10, lambda=8.075 
- Fold03: alpha=0.10, lambda=8.075 
+ Fold03: alpha=0.55, lambda=8.075 
- Fold03: alpha=0.55, lambda=8.075 
+ Fold03: alpha=1.00, lambda=8.075 
- Fold03: alpha=1.00, lambda=8.075 
+ Fold04: alpha=0.10, lambda=8.075 
- Fold04: alpha=0.10, lambda=8.075 
+ Fold04: alpha=0.55, lambda=8.075 
- Fold04: alpha=0.55, lambda=8.075 
+ Fold04: alpha=1.00, lambda=8.075 
- Fold04: alpha=1.00, lambda=8.075 
+ Fold05: alpha=0.10, lambda=8.075 
- Fold05: alpha=0.10, lambda=8.075 
+ Fold05: alpha=0.55, lambda=8.075 
- Fold05: alpha=0.55, lambda=8.075 
+ Fold05: alpha=1.00, lambda=8.075 
- Fold05: alpha=1.00, lambda=8.075 
+ Fold06: alpha=0.10, lambda=8.075 
- Fold06: alpha=0.10, lambda=8.075 
+ Fold06: alpha=0.55, lambda=8.075 
- Fold06: alpha=0.55, lambda=8.075 
+ Fold06: alpha=1.00, lambda=8.075 
- Fold06: alpha=1.00, lambda=8.075 
+ Fold07: alpha=0.10, lambda=8.075 
- Fold07: alpha=0.10, lambda=8.075 
+ Fold07: alpha=0.55, lambda=8.075 
- Fold07: alpha=0.55, lambda=8.075 
+ Fold07: alpha=1.00, lambda=8.075 
- Fold07: alpha=1.00, lambda=8.075 
+ Fold08: alpha=0.10, lambda=8.075 
- Fold08: alpha=0.10, lambda=8.075 
+ Fold08: alpha=0.55, lambda=8.075 
- Fold08: alpha=0.55, lambda=8.075 
+ Fold08: alpha=1.00, lambda=8.075 
- Fold08: alpha=1.00, lambda=8.075 
+ Fold09: alpha=0.10, lambda=8.075 
- Fold09: alpha=0.10, lambda=8.075 
+ Fold09: alpha=0.55, lambda=8.075 
- Fold09: alpha=0.55, lambda=8.075 
+ Fold09: alpha=1.00, lambda=8.075 
- Fold09: alpha=1.00, lambda=8.075 
+ Fold10: alpha=0.10, lambda=8.075 
- Fold10: alpha=0.10, lambda=8.075 
+ Fold10: alpha=0.55, lambda=8.075 
- Fold10: alpha=0.55, lambda=8.075 
+ Fold10: alpha=1.00, lambda=8.075 
- Fold10: alpha=1.00, lambda=8.075 
Aggregating results
Selecting tuning parameters
Fitting alpha = 0.1, lambda = 0.807 on full training set
14.544 sec elapsed
glmnet 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 385, 385, 385, 385, 385, 386, ... 
Resampling results across tuning parameters:

  alpha  lambda     RMSE       Rsquared   MAE      
  0.10   0.8074812   5.626153  0.9013214   4.205073
  0.10   2.5534797   7.040337  0.8493157   5.115813
  0.10   8.0748118   9.935082  0.7135596   7.013755
  0.55   0.8074812   7.874342  0.8006827   5.558154
  0.55   2.5534797  10.705584  0.6312632   7.410526
  0.55   8.0748118  12.873382  0.5609131   9.401403
  1.00   0.8074812   9.440555  0.7060032   6.438042
  1.00   2.5534797  11.630111  0.5711676   8.128249
  1.00   8.0748118  14.096676  0.5578389  10.413794

RMSE was used to select the optimal model using the smallest value.
The final values used for the model were alpha = 0.1 and lambda = 0.8074812.
+ Fold01: mtry=  2, min.node.size=5, splitrule=variance 
- Fold01: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold01: mtry= 31, min.node.size=5, splitrule=variance 
- Fold01: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold01: mtry=502, min.node.size=5, splitrule=variance 
Error: mtry can not be larger than number of variables in data. Ranger will EXIT now.
model fit failed for Fold01: mtry=502, min.node.size=5, splitrule=variance Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
- Fold01: mtry=502, min.node.size=5, splitrule=variance 
+ Fold01: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold01: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold01: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold01: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold01: mtry=502, min.node.size=5, splitrule=extratrees 
Error: mtry can not be larger than number of variables in data. Ranger will EXIT now.
model fit failed for Fold01: mtry=502, min.node.size=5, splitrule=extratrees Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
- Fold01: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry=  2, min.node.size=5, splitrule=variance 
- Fold02: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold02: mtry= 31, min.node.size=5, splitrule=variance 
- Fold02: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold02: mtry=502, min.node.size=5, splitrule=variance 
- Fold02: mtry=502, min.node.size=5, splitrule=variance 
+ Fold02: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold02: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold02: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold02: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry=  2, min.node.size=5, splitrule=variance 
- Fold03: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold03: mtry= 31, min.node.size=5, splitrule=variance 
- Fold03: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold03: mtry=502, min.node.size=5, splitrule=variance 
- Fold03: mtry=502, min.node.size=5, splitrule=variance 
+ Fold03: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold03: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold03: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold03: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry=  2, min.node.size=5, splitrule=variance 
- Fold04: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold04: mtry= 31, min.node.size=5, splitrule=variance 
- Fold04: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold04: mtry=502, min.node.size=5, splitrule=variance 
- Fold04: mtry=502, min.node.size=5, splitrule=variance 
+ Fold04: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold04: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold04: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold04: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry=  2, min.node.size=5, splitrule=variance 
- Fold05: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold05: mtry= 31, min.node.size=5, splitrule=variance 
- Fold05: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold05: mtry=502, min.node.size=5, splitrule=variance 
- Fold05: mtry=502, min.node.size=5, splitrule=variance 
+ Fold05: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold05: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold05: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold05: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry=  2, min.node.size=5, splitrule=variance 
- Fold06: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold06: mtry= 31, min.node.size=5, splitrule=variance 
- Fold06: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold06: mtry=502, min.node.size=5, splitrule=variance 
- Fold06: mtry=502, min.node.size=5, splitrule=variance 
+ Fold06: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold06: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold06: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold06: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry=  2, min.node.size=5, splitrule=variance 
- Fold07: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold07: mtry= 31, min.node.size=5, splitrule=variance 
- Fold07: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold07: mtry=502, min.node.size=5, splitrule=variance 
- Fold07: mtry=502, min.node.size=5, splitrule=variance 
+ Fold07: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold07: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold07: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold07: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry=  2, min.node.size=5, splitrule=variance 
- Fold08: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold08: mtry= 31, min.node.size=5, splitrule=variance 
- Fold08: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold08: mtry=502, min.node.size=5, splitrule=variance 
Error: mtry can not be larger than number of variables in data. Ranger will EXIT now.
model fit failed for Fold08: mtry=502, min.node.size=5, splitrule=variance Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
- Fold08: mtry=502, min.node.size=5, splitrule=variance 
+ Fold08: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold08: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold08: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry=502, min.node.size=5, splitrule=extratrees 
Error: mtry can not be larger than number of variables in data. Ranger will EXIT now.
model fit failed for Fold08: mtry=502, min.node.size=5, splitrule=extratrees Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
- Fold08: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry=  2, min.node.size=5, splitrule=variance 
- Fold09: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold09: mtry= 31, min.node.size=5, splitrule=variance 
- Fold09: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold09: mtry=502, min.node.size=5, splitrule=variance 
- Fold09: mtry=502, min.node.size=5, splitrule=variance 
+ Fold09: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold09: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold09: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold09: mtry=502, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry=  2, min.node.size=5, splitrule=variance 
- Fold10: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold10: mtry= 31, min.node.size=5, splitrule=variance 
- Fold10: mtry= 31, min.node.size=5, splitrule=variance 
+ Fold10: mtry=502, min.node.size=5, splitrule=variance 
- Fold10: mtry=502, min.node.size=5, splitrule=variance 
+ Fold10: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold10: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry= 31, min.node.size=5, splitrule=extratrees 
- Fold10: mtry= 31, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry=502, min.node.size=5, splitrule=extratrees 
- Fold10: mtry=502, min.node.size=5, splitrule=extratrees 
Aggregating results
Selecting tuning parameters
Fitting mtry = 502, splitrule = variance, min.node.size = 5 on full training set
Warning messages:
1: model fit failed for Fold01: mtry=502, min.node.size=5, splitrule=variance Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
2: model fit failed for Fold01: mtry=502, min.node.size=5, splitrule=extratrees Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
3: model fit failed for Fold08: mtry=502, min.node.size=5, splitrule=variance Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
4: model fit failed for Fold08: mtry=502, min.node.size=5, splitrule=extratrees Error in ranger::ranger(dependent.variable.name = ".outcome", data = x,  : 
  User interrupt or internal error.
 
5: In nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :
  There were missing values in resampled performance measures.
61.776 sec elapsed
Random Forest 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 385, 386, 384, 386, 386, 385, ... 
Resampling results across tuning parameters:

  mtry  splitrule   RMSE       Rsquared   MAE     
    2   variance     9.978073  0.8633150  7.047209
    2   extratrees  11.054922  0.8590442  7.953958
   31   variance     6.920395  0.9007110  4.498497
   31   extratrees   7.724516  0.8925397  5.116945
  502   variance     5.655934  0.8969215  3.624183
  502   extratrees   5.693513  0.9094492  3.643779

Tuning parameter 'min.node.size' was held constant at a value of 5
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were mtry = 502, splitrule = variance
 and min.node.size = 5.
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
Aggregating results
Selecting tuning parameters
Fitting nrounds = 100, lambda = 0.1, alpha = 1e-04, eta = 0.3 on full training set
290.677 sec elapsed
eXtreme Gradient Boosting 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 385, 386, 385, 385, 386, 384, ... 
Resampling results across tuning parameters:

  lambda  alpha  nrounds  RMSE      Rsquared   MAE      
  0e+00   0e+00   50      2.678072  0.9671178  0.6939860
  0e+00   0e+00  100      2.678085  0.9671343  0.6784393
  0e+00   0e+00  150      2.678085  0.9671343  0.6784363
  0e+00   1e-04   50      2.735925  0.9653581  0.7123665
  0e+00   1e-04  100      2.735769  0.9653741  0.6959501
  0e+00   1e-04  150      2.735769  0.9653741  0.6959501
  0e+00   1e-01   50      2.710306  0.9643226  0.7253235
  0e+00   1e-01  100      2.710409  0.9643243  0.7186479
  0e+00   1e-01  150      2.710409  0.9643243  0.7186479
  1e-04   0e+00   50      2.775174  0.9652706  0.7164485
  1e-04   0e+00  100      2.774472  0.9652933  0.6997417
  1e-04   0e+00  150      2.774475  0.9652933  0.6997229
  1e-04   1e-04   50      2.759407  0.9654035  0.7088747
  1e-04   1e-04  100      2.758559  0.9654315  0.6924440
  1e-04   1e-04  150      2.758559  0.9654315  0.6924440
  1e-04   1e-01   50      2.689668  0.9642362  0.7129121
  1e-04   1e-01  100      2.689667  0.9642471  0.7064128
  1e-04   1e-01  150      2.689667  0.9642471  0.7064128
  1e-01   0e+00   50      2.681876  0.9623826  0.7157966
  1e-01   0e+00  100      2.681495  0.9624095  0.6954506
  1e-01   0e+00  150      2.681493  0.9624095  0.6954417
  1e-01   1e-04   50      2.674496  0.9626652  0.7128972
  1e-01   1e-04  100      2.673609  0.9626926  0.6937707
  1e-01   1e-04  150      2.673609  0.9626926  0.6937707
  1e-01   1e-01   50      2.866227  0.9598181  0.7331025
  1e-01   1e-01  100      2.865865  0.9598265  0.7252697
  1e-01   1e-01  150      2.865865  0.9598265  0.7252697

Tuning parameter 'eta' was held constant at a value of 0.3
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were nrounds = 100, lambda = 0.1, alpha
 = 1e-04 and eta = 0.3.
Aggregating results
Fitting final model on full training set
4.846 sec elapsed
Linear Regression 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 386, 385, 384, 384, 384, 386, ... 
Resampling results:

  RMSE      Rsquared    MAE     
  103.8284  0.09000306  28.82261

Tuning parameter 'intercept' was held constant at a value of TRUE
Aggregating results
Selecting tuning parameters
Fitting alpha = 0.1, lambda = 0.807 on full training set
3.071 sec elapsed
glmnet 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 385, 385, 385, 386, 385, 386, ... 
Resampling results across tuning parameters:

  alpha  lambda     RMSE       Rsquared   MAE      
  0.10   0.8074812   5.971987  0.8855899   4.408176
  0.10   2.5534797   7.154734  0.8425396   5.232710
  0.10   8.0748118   9.931184  0.7160192   7.060264
  0.55   0.8074812   7.930988  0.8002556   5.665101
  0.55   2.5534797  10.584782  0.6431429   7.432644
  0.55   8.0748118  12.828678  0.5657516   9.387077
  1.00   0.8074812   9.345796  0.7160025   6.507351
  1.00   2.5534797  11.551399  0.5770995   8.122655
  1.00   8.0748118  14.068534  0.5578389  10.392949

RMSE was used to select the optimal model using the smallest value.
The final values used for the model were alpha = 0.1 and lambda = 0.8074812.
Aggregating results
Selecting tuning parameters
Fitting mtry = 502, splitrule = extratrees, min.node.size = 5 on full training set
Warning message:
In nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :
  There were missing values in resampled performance measures.
26.942 sec elapsed
Random Forest 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 385, 384, 386, 385, 385, 385, ... 
Resampling results across tuning parameters:

  mtry  splitrule   RMSE       Rsquared   MAE     
    2   variance     9.313760  0.9131913  6.638076
    2   extratrees  10.559027  0.9098290  7.675993
   31   variance     6.311359  0.9264297  4.213600
   31   extratrees   6.987421  0.9239184  4.799097
  502   variance     5.497869  0.8994601  3.433990
  502   extratrees   5.392623  0.9200766  3.477070

Tuning parameter 'min.node.size' was held constant at a value of 5
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were mtry = 502, splitrule = extratrees
 and min.node.size = 5.
Aggregating results
Selecting tuning parameters
Fitting nrounds = 100, lambda = 0.1, alpha = 0, eta = 0.3 on full training set
43.44 sec elapsed
eXtreme Gradient Boosting 

428 samples
536 predictors

Pre-processing: centered (502), scaled (502), median imputation (502),
 remove (34) 
Resampling: Cross-Validated (10 fold) 
Summary of sample sizes: 385, 385, 385, 386, 385, 386, ... 
Resampling results across tuning parameters:

  lambda  alpha  nrounds  RMSE      Rsquared   MAE      
  0e+00   0e+00   50      3.064738  0.9544165  0.7538325
  0e+00   0e+00  100      3.064737  0.9544082  0.7360594
  0e+00   0e+00  150      3.064738  0.9544082  0.7360581
  0e+00   1e-04   50      3.065393  0.9542876  0.7533134
  0e+00   1e-04  100      3.065830  0.9542808  0.7370398
  0e+00   1e-04  150      3.065830  0.9542808  0.7370398
  0e+00   1e-01   50      3.069305  0.9562620  0.7540403
  0e+00   1e-01  100      3.069545  0.9562556  0.7473743
  0e+00   1e-01  150      3.069545  0.9562556  0.7473743
  1e-04   0e+00   50      2.992341  0.9563885  0.7318373
  1e-04   0e+00  100      2.992902  0.9563680  0.7158230
  1e-04   0e+00  150      2.992902  0.9563680  0.7158192
  1e-04   1e-04   50      2.968110  0.9564970  0.7252098
  1e-04   1e-04  100      2.967726  0.9565017  0.7082803
  1e-04   1e-04  150      2.967726  0.9565017  0.7082803
  1e-04   1e-01   50      3.058537  0.9565657  0.7542076
  1e-04   1e-01  100      3.059044  0.9565541  0.7467330
  1e-04   1e-01  150      3.059044  0.9565541  0.7467330
  1e-01   0e+00   50      2.957599  0.9540687  0.7084160
  1e-01   0e+00  100      2.957516  0.9540636  0.6891487
  1e-01   0e+00  150      2.957517  0.9540636  0.6891461
  1e-01   1e-04   50      2.970362  0.9537431  0.7056701
  1e-01   1e-04  100      2.970568  0.9537524  0.6877740
  1e-01   1e-04  150      2.970568  0.9537524  0.6877740
  1e-01   1e-01   50      2.959332  0.9556371  0.7034248
  1e-01   1e-01  100      2.959119  0.9556335  0.6957963
  1e-01   1e-01  150      2.959119  0.9556335  0.6957963

Tuning parameter 'eta' was held constant at a value of 0.3
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were nrounds = 100, lambda = 0.1, alpha =
 0 and eta = 0.3.
Warning message:
In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
